<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Car Details</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined" />
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" href="/css/detail.css" />
</head>
<body>
    <div class="back-btn" onclick="history.back()">
        <div id="chevron-circle"></div>
        <span class="material-symbols-outlined" id="chevron">
            chevron_left
        </span>
    </div>


    <div class="car-details">
        <h1 class='title'>Sewa Mobil</h1>

        <div class="navigation">
            <button id="prevCar" onclick="navigateCar(-1)" aria-label="Previous">
                <span class="material-icons">chevron_left</span>
            </button>
            <img id="carImage" src="" alt="Car Image" />
            <button id="nextCar" onclick="navigateCar(1)" aria-label="Next">
                <span class="material-icons">chevron_right</span>
            </button>
        </div>

        <div class="details"> 
            <h2>Informasi Mobil</h2>
            <div class="table-container"> 
                <table>
                    <tbody>
                        <tr>
                            <th>Tipe Mobil</th>
                            <td id="carModel" data-label="Model"></td>
                        </tr>
                        <tr>
                            <th>Nama Mobil</th>
                            <td id="carName" data-label="Car Name"></td>
                        </tr>
                        <tr>
                            <th>Transmisi</th>
                            <td id="carTransmission" data-label="Transmission"></td>
                        </tr>
                        <tr>
                            <th>Jumlah Penumpang</th>
                            <td id="carSeats" data-label="Seats"></td>
                        </tr>
                        <tr>
                            <th>Nama Penyewa</th>
                            <td id="customerName" data-label="Customer Name"></td>
                        </tr>
                        <tr>
                            <th>Tanggal Sewa</th>
                            <td id="rentalDate" data-label="Rental Date"></td>
                        </tr>
                        <tr>
                            <th>Harga Sewa</th>
                            <td id="carPrice" data-label="Price per day"></td>
                        </tr>
                        <tr>
                            <th>Total Harga Sewa</th>
                            <td id="totalPrice" data-label="Total Price"></td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>

    </div>

    <button id="sewa" onclick="sewaCar()">Sewa Sekarang</button>
    
    

    <script>
        function formatDateRange(pickUpDate, returnDate) {
            const options = { day: '2-digit', month: 'long', year: 'numeric' };
            
            const pickUpDateObj = new Date(pickUpDate);
            const returnDateObj = new Date(returnDate);

            const formattedPickUpDate = new Intl.DateTimeFormat('id-ID', options).format(pickUpDateObj);
            const formattedReturnDate = new Intl.DateTimeFormat('id-ID', options).format(returnDateObj);

            return `${formattedPickUpDate} sampai ${formattedReturnDate}`;
        }
        
        async function fetchCarDetails() {
            const carId = sessionStorage.getItem('SelectedCarId');
            const customerName = sessionStorage.getItem('CustomerName');
            const dateStart = sessionStorage.getItem('DateStart');
            const dateEnd = sessionStorage.getItem('DateEnd');
            const rangeTanggal = formatDateRange(dateStart, dateEnd);

            try {
                const response = await fetch(`http://localhost:7100/api/Rental/info?customerName=${customerName}&id=${carId}&dateStart=${dateStart}&dateEnd=${dateEnd}`, {
                    method: 'GET',
                    credentials: 'include'
                });

                const text = await response.text(); 

                const result = JSON.parse(text); 
                if (response.ok) {
                    displayCarDetails(result.data, rangeTanggal);
                } else {
                    console.error('Error fetching car details:', result);
                    document.querySelector('.car-details').innerHTML = 'Car details not found.';
                }
            } catch (error) {
                console.error('Error:', error);
            }
        }

        function displayCarDetails(car, rangeTanggal) {
            const userEmail = sessionStorage.getItem('CustomerEmail');

            const carId = car.carId;
            const carNumber = parseInt(carId.substring(3)); 
            const carImageIndex = (carNumber % 10) + 1; 
            const carImage = `/images/${carImageIndex}.jpeg`;

            document.getElementById('carName').textContent = car.carName;
            document.getElementById('carImage').src = carImage;
            document.getElementById('carImage').alt = car.carImageLink;
            document.getElementById('carModel').textContent = car.model;
            document.getElementById('carTransmission').textContent = car.transmission;
            document.getElementById('carSeats').textContent = car.numberOfCarSeats;
            document.getElementById('rentalDate').textContent = rangeTanggal;
            document.getElementById('carPrice').textContent = car.pricePerDay.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");;
            document.getElementById('customerName').textContent = `${car.customerName} (${userEmail})`;
            document.getElementById('totalPrice').textContent = car.totalPrice.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");;
        }

        function navigateCar(direction) {
            const carIdsString = sessionStorage.getItem('CarIds');
            console.log(carIdsString);

            if (!carIdsString) {
                alert('No cars available to navigate.');
                return;
            }

            let carIds;
            try {
                carIds = JSON.parse(carIdsString);
            } catch (e) {
                console.error('Error parsing CarIds:', e);
                alert('Error navigating cars. Please try again.');
                return;
            }

            const currentCarId = sessionStorage.getItem('SelectedCarId');
            console.log("curr= ", currentCarId);
            const currentIndex = carIds.indexOf(currentCarId);

            if (currentIndex === -1) {
                alert('Current car not found in the list.');
                return;
            }

            const newIndex = currentIndex + direction;
            if (newIndex < 0 || newIndex >= carIds.length) {
                alert('No more cars in this direction.');
                return;
            }

            sessionStorage.setItem('SelectedCarId', carIds[newIndex]);
            fetchCarDetails(); 
        }

        async function sewaCar() {
            const carId = sessionStorage.getItem('SelectedCarId');
            const customerId = sessionStorage.getItem('CustomerId'); 
            const rentalDate = sessionStorage.getItem('DateStart');
            const returnDate = sessionStorage.getItem('DateEnd');
            const totalPrice = parseFloat(document.getElementById('totalPrice').textContent.replace(/[^\d.-]/g, ''));

            const requestBody = {
                RentalDate: rentalDate,
                ReturnDate: returnDate,
                TotalPrice: totalPrice,
                PaymentStatus: false, 
                CustomerId: customerId,
                CarId: carId
            };

            try {
                const response = await fetch('http://localhost:7100/api/Rental/Booking', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    credentials: 'include',
                    body: JSON.stringify(requestBody)
                });

                const result = await response.json();
                if (response.ok) {
                    alert(result.data); 
                    window.location.href = '/Riwayat/Index'; 
                } else {
                    console.error('Error during booking:', result);
                    alert('Booking failed: ' + result.data);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('An error occurred while booking the car.');
            }
        }

        window.onload = fetchCarDetails;
    </script>

    <style>
        #chevron {
            position: absolute;
            top: 70px;
            left: 20px;
            font-size: 40px;
            cursor: pointer;
            color: #704297;
            z-index: 3;
        }

        #chevron:hover {
            color: #d3a8f9; 
        }

        #chevron-circle {
            position: absolute;
            top: 70px; 
            left: 20px; 
            width: 40px;
            height: 40px;
            background-color: #fff;
            border-radius: 50%;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
            z-index: 1; 
        }

        #chevron-circle:hover {
            background-color: lightgray; 
        }
        .table-container {
            overflow-x: auto; 
            margin: 0 auto; 
            width: 90%;
        }

        table {
            border-collapse: collapse;
            width: 100%; 
            min-width: 600px; 
        }

        th, td {
            border: 1px solid #aaa;
            padding: 8px;
            text-align: left;
        }

        th {
            background-color: #f0f0f0;
            color: #333;
            font-weight: bold;
        }

        .details{
            background-color: #fff;
            width: 60%;
            padding: 20px;
            text-align: center;
            margin-left: auto;
            margin-right: auto;
            padding-bottom: 50px;
            border-radius: 2%;
        }

        h1 {
            font-size: 24px;
            color: #333;
        }

        h2{
            font-size: 20px;
            color: black
        }
        .car-details {
            text-align: center;
            margin: 20px;
        }

        .car-details img {
            max-width: 60%;
            max-height: 40vh;
            margin-bottom: 20px;
            border-radius: 5%;
        }

        .car-details h1 {
            font-size: 24px;
            color: #4a4a4a;
        }

        .navigation {
            display: flex;
            align-items: center;
            justify-content: center; 
            margin: 20px 0;
        }

        .navigation button {
            background-color: rgba(0, 0, 0, 0.2);
            color: white;
            border: none;
            cursor: pointer;
            padding: 10px;
            font-size: 46px; 
        }

        .navigation button:hover {
            background-color: rgba(0, 0, 0, 0.475);
        }

        #sewa {
            display: block; 
            margin: 20px auto; 
            margin-top: 50px;
            padding: 15px 20px;
            background-color: rgb(244, 168, 26);
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 20px;
        }

        #sewa:hover{
            background-color: rgb(205, 139, 17)
        }
    </style>


</body>
</html>
