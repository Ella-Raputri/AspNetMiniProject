@{
    ViewData["Title"] = "Home Page";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/css/home.css" />
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">    
</head>
<body>
    <div class="title">
        <h1>Selamat Datang di Rental Mobil Kami</h1>
    </div>

    <div class="filter">
        <div class="date1">
            <label for="pickUpDate">Pickup Date:</label>
            <input type="date" id="pickUpDate" name="pickUpDate" class="form-control" />
        </div>
        
        <div class="date2">
            <label for="returnDate">Return Date:</label>
            <input type="date" id="returnDate" name="returnDate" class="form-control" />
        </div>
        
        <div class="filter3">
            <label for="carYear">Filter Tahun Pembuatan:</label>
            <select name="carYear" id="carYear">
                <option value="Semua Tahun">Semua Tahun</option>
                <option value="2015">2015</option>
                <option value="2016">2016</option>
                <option value="2017">2017</option>
                <option value="2018">2018</option>
                <option value="2019">2019</option>
            </select>
        </div>

        <div class="button-wrapper">
            <button class="cari" onclick="fetchAvailableCars()">
                Cari
            </button>
        </div>
    </div>

    <div class="sort-controls">
        <div class="sort-dropdown">
            <label for="sortBy">Sort By:</label>
            <select id="sortBy">
                <option value="name">Name</option>
                <option value="price">Price</option>
            </select>
        </div>
        <button id="sortDirection" class="sort-button" onclick="toggleSortDirection()">
            <span class="material-icons">arrow_drop_up</span>
        </button>
    </div>

    <div id="availableCars" class="car-list"></div>
    <div id="paginationControls" class="pagination-controls"></div>

    <script>
        let currentPage = 1;
        const itemsPerPage = 3;
        let sortDirection = 'asc'; 
        let sortBy = 'name';

        document.getElementById('sortBy').addEventListener('change', (event) => {
            sortBy = event.target.value;
            fetchAvailableCars(); 
        });

        function toggleSortDirection() {
            sortDirection = sortDirection === 'asc' ? 'desc' : 'asc';
            const button = document.getElementById('sortDirection');
            button.innerHTML = sortDirection === 'asc' ? '<span class="material-icons">arrow_drop_up</span>' : '<span class="material-icons">arrow_drop_down</span>'; 
            fetchAvailableCars();
        }

       async function fetchAvailableCars() {
            try {
                const pickUpDate = document.getElementById('pickUpDate').value;
                const returnDate = document.getElementById('returnDate').value;
                const carYear = document.getElementById('carYear').value;
                const yearQuery = carYear !== 'Semua Tahun' ? `&year=${carYear}` : ``;

                const response = await fetch(`http://localhost:7100/api/Rental/available-cars?dateA=${pickUpDate}&dateB=${returnDate}${yearQuery}`, {
                    method: 'GET',
                    credentials: 'include'
                });

                const result = await response.json();
                sessionStorage.setItem('DateStart', pickUpDate);
                sessionStorage.setItem('DateEnd', returnDate);

                if (response.ok && result.data) {
                    displayCars(result.data);
                } else {
                    console.error('No data found:', result);
                    document.getElementById('availableCars').innerHTML = 'No available cars for the selected dates.';
                }
            } catch (error) {
                console.error('Error fetching available cars:', error);
            }
        }

        function displayCars(cars) {
            if (!Array.isArray(cars) || cars.length === 0) {
                document.getElementById('availableCars').innerHTML = 'No available cars for the selected dates.';
                return;
            }

            cars.sort((a, b) => {
                if (sortBy === 'price') {
                    return sortDirection === 'asc' ? a.pricePerDay - b.pricePerDay : b.pricePerDay - a.pricePerDay;
                } else { 
                    return sortDirection === 'asc' ? a.name.localeCompare(b.name) : b.name.localeCompare(a.name);
                }
            });

            const carsContainer = document.getElementById('availableCars');
            carsContainer.innerHTML = '';
            const carIds = cars.map(car => car.carId);

            const carsPerPage = 3;
            let currentPage = 1;

            function renderPage(page) {
                carsContainer.innerHTML = '';

                const startIndex = (page - 1) * carsPerPage;
                const endIndex = startIndex + carsPerPage;

                const carsToDisplay = cars.slice(startIndex, endIndex);
                const userId = sessionStorage.getItem('CustomerId');

                carsToDisplay.forEach(car => {
                    const carId = car.carId;
                    const carNumber = parseInt(carId.substring(3)); 
                    const carImageIndex = (carNumber % 10) + 1; 
                    const carImage = `/images/${carImageIndex}.jpeg`;
                    const formattedPrice = car.pricePerDay.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");

                    carsContainer.innerHTML += `
                        <div class="car-card">
                            <img src="${carImage}" alt="Placeholder for ${car.carImageLink}" class="car-image">
                            <h3>${car.name}</h3>
                            <p>Harga: Rp ${formattedPrice}/hari</p>
                            <button id="details-button" 
                                    ${!userId ? 'disabled' : ''} 
                                    data-car-id="${car.carId}" 
                                    data-car-ids='${JSON.stringify(carIds)}' 
                                    onclick="goToDetails(this)">
                                View Details
                            </button>
                        </div>
                    `;
                });

                const paginationControls = document.getElementById('paginationControls');
                paginationControls.innerHTML = '';

                const totalPages = Math.ceil(cars.length / carsPerPage);
                const maxPagesToShow = 5;
                let startPage, endPage;

                if (totalPages <= maxPagesToShow) {
                    startPage = 1;
                    endPage = totalPages;
                } else {
                    const midPoint = Math.floor(maxPagesToShow / 2);
                    startPage = Math.max(1, page - midPoint);
                    endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);

                    if (endPage - startPage < maxPagesToShow - 1) {
                        startPage = Math.max(1, endPage - maxPagesToShow + 1);
                    }
                }

                for (let i = startPage; i <= endPage; i++) {
                    const pageButton = document.createElement('button');
                    pageButton.textContent = i;
                    pageButton.classList.add('page-button');
                    if (i === page) {
                        pageButton.classList.add('active');
                    }
                    pageButton.addEventListener('click', () => renderPage(i));
                    paginationControls.appendChild(pageButton);
                }

                if (endPage < totalPages) {
                    const ellipsis = document.createElement('span');
                    ellipsis.textContent = '...';
                    paginationControls.appendChild(ellipsis);

                    const lastPageButton = document.createElement('button');
                    lastPageButton.textContent = totalPages;
                    lastPageButton.classList.add('page-button');
                    lastPageButton.addEventListener('click', () => renderPage(totalPages));
                    paginationControls.appendChild(lastPageButton);
                }
            }

            renderPage(currentPage);
        }

        function goToDetails(button) {
            const carId = button.getAttribute('data-car-id');
            const carIds = JSON.parse(button.getAttribute('data-car-ids')); 

            if (carId && carIds) {
                sessionStorage.setItem('CarIds', JSON.stringify(carIds)); 
                sessionStorage.setItem('SelectedCarId', carId);
                window.location.href = `/Home/Detail`; 
            } else {
                alert('Please log in to view details.');
            }
        }
    </script>


<style>
.title {
    text-align: center;
    margin-top: 50px;
    margin-bottom: 20px;
}

.title h1 {
    font-size: 24px;
    color: #333;
}

.filter {
    display: flex;
    justify-content: center;
    margin: 20px;
    margin-top: 40px;
}

.date1, .date2, .filter3 {
    display: flex;
    flex-direction: column;
    gap: 5px;
}

.button-wrapper {
    align-self: left;
}

.cari {
    margin-top: 10px;
    color: white;
    border: none;
    padding: 10px 20px;
    cursor: pointer;
    text-decoration: none;
    font-size: 16px;
    border-radius: 5px;
}

.car-list {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 20px;
    margin: 60px;
}

.car-card {
    background-color: #fff;
    border: 1px solid #ddd;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    width: 300px; 
    padding: 15px;
    text-align: center;
}

.car-card img {
    max-width: 100%;
    height: auto;
    border-radius: 5px;
    margin-bottom: 15px;
}

.car-card h3 {
    font-size: 22px;
    color: #333;
    margin-bottom: 10px;
}

.car-card p {
    font-size: 18px;
    margin: 10px;
    color: #666;
    margin-bottom: 20px;
}

.car-card #details-button{
    padding: 10px;
    margin-top: 10px;
    margin-bottom: 10px;
    background-color: rgb(244, 168, 26);
    color: white;
    font-size: 16px;
    border: none;
    border-radius: 5px;
}

.car-card #details-button:hover{
    background-color: rgb(205, 139, 17);
}

.pagination-controls {
    display: flex;
    justify-content: center;
    margin-top: 60px;
    gap: 5px;
}

.page-button {
    background-color: rgb(114, 196, 255);
    color: white;
    border: none;
    padding: 8px 16px;
    cursor: pointer;
    font-size: 14px;
    border-radius: 5px;
}

.page-button.active {
    background-color: rgb(48, 130, 188);
}

.page-button:hover {
    background-color: rgb(160, 215, 255);
}

.sort-controls {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    margin: 20px 40px;
    gap: 2px;
}

.sort-dropdown {
    display: flex;
    align-items: center;
}

.sort-dropdown label{
    margin-right: 5px;
}
.sort-dropdown select{
    padding: 5px;
}

.sort-button {
    font-size: 20px;
    background: none;
    border: none;
    cursor: pointer;
    transition: transform 0.2s;
}

.sort-button:hover {
    transform: scale(1.1);
}

#sortDirection span{
    font-size: 32px;
}
</style>
</body>
</html>
